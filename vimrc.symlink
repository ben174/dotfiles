" START: Vundle
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" START: Plugins
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-sensible'
Plugin 'pangloss/vim-javascript'
Plugin 'easymotion/vim-easymotion'
" END: Plugins

call vundle#end()            " required
filetype plugin indent on    " required
" END: Vundle

" set smartindent
set number                                           " show line numbers
set tabstop=4                                        " width of tab character
set shiftwidth=4                                     " affects <<, >>, ==
set expandtab
set smarttab
set backspace=indent,eol,start
set nocompatible
set scrolloff=5

set pastetoggle=<F2>                                 " <F2> toggles paste mode


" backup to ~/.tmp
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

" ignore filetypes
set wildignore+=*/venv/**                            " ignores virtual envs
set wildignore+=*/node_modules/**                    " ignores node packages
set wildignore+=*.pyc                                " ignores python byte code
set wildignore+=*/static_files/**                    " django static files

autocmd FileType python setlocal expandtab shiftwidth=4 softtabstop=4
filetype plugin indent on
filetype on

" folding settings
set foldmethod=indent                                "fold based on indent
set foldnestmax=10                                   "deepest fold is 10 levels
set nofoldenable                                     "dont fold by default
set foldlevel=1                                      "this is just what i use
set cc=80

let mapleader=","


" highlight trailing whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" delete trailing whitespace
autocmd BufWritePre *.py,*.xml :%s/\s\+$//e
